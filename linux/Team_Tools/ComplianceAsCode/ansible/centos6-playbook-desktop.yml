---
###############################################################################
#
# Ansible Playbook for Desktop Baseline
#
# Profile Description:
# This profile is for a desktop installation of Red Hat Enterprise Linux 6.
#
# Profile ID:  desktop
# Benchmark ID:  RHEL-6
# Benchmark Version:  0.1.52
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.3.3 using:
# $ oscap xccdf generate fix --profile desktop --fix-type ansible xccdf-file.xml
#
# This Ansible Playbook is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this Ansible Playbook:
# $ ansible-playbook -i "localhost," -c local playbook.yml
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################

- hosts: all
  vars:
    login_banner_text: !!str ^\-\-[\s\n]+WARNING[\s\n]+\-\-[\s\n]+This[\s\n]+system[\s\n]+is[\s\n]+for[\s\n]+the[\s\n]+use[\s\n]+of[\s\n]+authorized[\s\n]+users[\s\n]+only\.[\s\n]+Individuals[\s\n]+using[\s\n]+this[\s\n]+computer[\s\n]+system[\s\n]+without[\s\n]+authority[\s\n]+or[\s\n]+in[\s\n]+excess[\s\n]+of[\s\n]+their[\s\n]+authority[\s\n]+are[\s\n]+subject[\s\n]+to[\s\n]+having[\s\n]+all[\s\n]+their[\s\n]+activities[\s\n]+on[\s\n]+this[\s\n]+system[\s\n]+monitored[\s\n]+and[\s\n]+recorded[\s\n]+by[\s\n]+system[\s\n]+personnel\.[\s\n]+Anyone[\s\n]+using[\s\n]+this[\s\n]+system[\s\n]+expressly[\s\n]+consents[\s\n]+to[\s\n]+such[\s\n]+monitoring[\s\n]+and[\s\n]+is[\s\n]+advised[\s\n]+that[\s\n]+if[\s\n]+such[\s\n]+monitoring[\s\n]+reveals[\s\n]+possible[\s\n]+evidence[\s\n]+of[\s\n]+criminal[\s\n]+activity[\s\n]+system[\s\n]+personal[\s\n]+may[\s\n]+provide[\s\n]+the[\s\n]+evidence[\s\n]+of[\s\n]+such[\s\n]+monitoring[\s\n]+to[\s\n]+law[\s\n]+enforcement[\s\n]+officials\.$
    var_accounts_passwords_pam_faillock_deny: !!str 3
    var_password_pam_unix_remember: !!str 5
    var_accounts_maximum_age_login_defs: !!str 90
    var_accounts_password_minlen_login_defs: !!str 15
    var_accounts_password_warn_age_login_defs: !!str 7
    var_accounts_minimum_age_login_defs: !!str 7
    var_accounts_tmout: !!str 600
    var_auditd_max_log_file: !!str 6
    var_auditd_num_logs: !!str 5
    var_auditd_max_log_file_action: !!str rotate
    var_auditd_admin_space_left_action: !!str single
    var_removable_partition: !!str /dev/cdrom
    sysctl_net_ipv4_conf_default_accept_redirects_value: !!str 0
    sysctl_net_ipv4_conf_all_log_martians_value: !!str 1
    sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: !!str 1
    sysctl_net_ipv4_conf_default_rp_filter_value: !!str 1
    sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str 1
    sysctl_net_ipv4_conf_all_secure_redirects_value: !!str 0
    sysctl_net_ipv4_tcp_syncookies_value: !!str 1
    sysctl_net_ipv4_conf_all_accept_source_route_value: !!str 0
    sysctl_net_ipv4_conf_all_rp_filter_value: !!str 1
    sysctl_net_ipv4_conf_all_accept_redirects_value: !!str 0
    sysctl_net_ipv4_conf_default_secure_redirects_value: !!str 0
    sysctl_net_ipv4_conf_default_accept_source_route_value: !!str 0
    sysctl_net_ipv6_conf_default_accept_redirects_value: !!str 0
    rsyslog_remote_loghost_address: !!str logcollector
    var_selinux_state: !!str enforcing
    var_selinux_policy_name: !!str targeted
    var_postfix_inet_interfaces: !!str loopback-only
    sshd_idle_timeout_value: !!str 300
    var_sshd_set_keepalive: !!str 0
  tasks:

    - name: Modify the System Login Banner - remove incorrect banner
      file:
        state: absent
        path: /etc/issue
      tags:
        - DISA-STIG-RHEL-06-000073
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(c)
        - banner_etc_issue
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - unknown_strategy

    - name: Modify the System Login Banner - add correct banner
      lineinfile:
        dest: /etc/issue
        line: '{{ login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*)\|.*\)$",
          "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "\n") | regex_replace("\\", "") | wordwrap() }}'
        create: true
      tags:
        - DISA-STIG-RHEL-06-000073
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(c)
        - banner_etc_issue
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - unknown_strategy

    - name: Add auth pam_faillock preauth deny before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny
          }}
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - CJIS-5.5.3
        - DISA-STIG-RHEL-06-000061
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.1.6
        - accounts_passwords_pam_faillock_deny
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add deny argument to auth pam_faillock preauth
      pamd:
        name: '{{ item }}'
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - CJIS-5.5.3
        - DISA-STIG-RHEL-06-000061
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.1.6
        - accounts_passwords_pam_faillock_deny
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add auth pam_faillock authfail deny after pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: after
      loop:
        - system-auth
        - password-auth
      tags:
        - CJIS-5.5.3
        - DISA-STIG-RHEL-06-000061
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.1.6
        - accounts_passwords_pam_faillock_deny
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add deny argument to auth pam_faillock authfail
      pamd:
        name: '{{ item }}'
        type: auth
        new_type: auth
        control: '[default=die]'
        module_path: pam_faillock.so
        module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - CJIS-5.5.3
        - DISA-STIG-RHEL-06-000061
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.1.6
        - accounts_passwords_pam_faillock_deny
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - CJIS-5.5.3
        - DISA-STIG-RHEL-06-000061
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.1.6
        - accounts_passwords_pam_faillock_deny
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Do not allow users to reuse recent passwords - system-auth (change)
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
        replace: \g<1>{{ var_password_pam_unix_remember }}\g<3>
      tags:
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-06-000274
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_unix_remember
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed

    - name: Do not allow users to reuse recent passwords - system-auth (add)
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
        replace: \g<0> remember={{ var_password_pam_unix_remember }}
      tags:
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-06-000274
        - NIST-800-171-3.5.8
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.5
        - accounts_password_pam_unix_remember
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed

    - name: Set Password Hashing Algorithm in /etc/libuser.conf
      lineinfile:
        dest: /etc/libuser.conf
        insertafter: ^\s*\[defaults]
        regexp: ^#?crypt_style
        line: crypt_style = sha512
        state: present
        create: true
      tags:
        - CJIS-5.6.2.2
        - DISA-STIG-RHEL-06-000064
        - NIST-800-171-3.13.11
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-5(c)
        - PCI-DSS-Req-8.2.1
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - set_password_hashing_algorithm_libuserconf

    - name: Set Password Hashing Algorithm in /etc/login.defs
      lineinfile:
        dest: /etc/login.defs
        regexp: ^#?ENCRYPT_METHOD
        line: ENCRYPT_METHOD SHA512
        state: present
        create: true
      tags:
        - CJIS-5.6.2.2
        - DISA-STIG-RHEL-06-000063
        - NIST-800-171-3.13.11
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-5(c)
        - PCI-DSS-Req-8.2.1
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - set_password_hashing_algorithm_logindefs

    - name: require single user mode password
      lineinfile:
        create: true
        dest: /etc/sysconfig/init
        regexp: ^#?SINGLE=
        line: SINGLE=/sbin/sulogin
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000069
        - NIST-800-171-3.1.1
        - NIST-800-171-3.4.5
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-2
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - require_singleuser_auth
        - restrict_strategy

    - name: Ensure screen is installed
      package:
        name: screen
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000071
        - NIST-800-171-3.1.10
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_screen_installed

    - name: Set Password Maximum Age
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^#?PASS_MAX_DAYS
        line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}
      tags:
        - CJIS-5.6.2.1
        - DISA-STIG-RHEL-06-000053
        - NIST-800-171-3.5.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-53-IA-5(f)
        - PCI-DSS-Req-8.2.4
        - accounts_maximum_age_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set Password Minimum Length in login.defs
      lineinfile:
        dest: /etc/login.defs
        regexp: ^PASS_MIN_LEN *[0-9]*
        state: present
        line: PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}
        create: true
      tags:
        - CJIS-5.6.2.1
        - DISA-STIG-RHEL-06-000050
        - NIST-800-171-3.5.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(f)
        - accounts_password_minlen_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set Password Warning Age
      lineinfile:
        dest: /etc/login.defs
        regexp: ^PASS_WARN_AGE *[0-9]*
        state: present
        line: PASS_WARN_AGE        {{ var_accounts_password_warn_age_login_defs }}
        create: true
      tags:
        - DISA-STIG-RHEL-06-000054
        - NIST-800-171-3.5.8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-53-IA-5(f)
        - accounts_password_warn_age_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set Password Minimum Age
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^#?PASS_MIN_DAYS
        line: PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}
      tags:
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-06-000051
        - NIST-800-171-3.5.8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-53-IA-5(f)
        - accounts_minimum_age_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Prevent Log In to Accounts With Empty Password - system-auth
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: nullok
      tags:
        - CJIS-5.5.2
        - DISA-STIG-RHEL-06-000030
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(c)
        - PCI-DSS-Req-8.2.3
        - configure_strategy
        - high_severity
        - low_complexity
        - medium_disruption
        - no_empty_passwords
        - no_reboot_needed

    - name: Prevent Log In to Accounts With Empty Password - password-auth
      replace:
        dest: /etc/pam.d/password-auth
        follow: true
        regexp: nullok
      tags:
        - CJIS-5.5.2
        - DISA-STIG-RHEL-06-000030
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(c)
        - PCI-DSS-Req-8.2.3
        - configure_strategy
        - high_severity
        - low_complexity
        - medium_disruption
        - no_empty_passwords
        - no_reboot_needed

    - name: Restrict Virtual Console Root Logins
      lineinfile:
        dest: /etc/securetty
        regexp: ^vc
        state: absent
      tags:
        - DISA-STIG-RHEL-06-000027
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - securetty_root_login_console_only

    - name: Restrict Serial Port Root Logins
      lineinfile:
        dest: /etc/securetty
        regexp: ttyS[0-9]
        state: absent
      tags:
        - DISA-STIG-RHEL-06-000028
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_serial_port_logins
        - restrict_strategy

    - name: Set Interactive Session Timeout
      block:

        - name: Deduplicate values from /etc/profile
          lineinfile:
            path: /etc/profile
            create: false
            regexp: ^\s*TMOUT=
            state: absent

        - name: Check if /etc/profile.d exists
          stat:
            path: /etc/profile.d
          register: _etc_profile_d_exists

        - name: Check if the parameter TMOUT is present in /etc/profile.d
          find:
            paths: /etc/profile.d
            recurse: 'yes'
            follow: 'no'
            contains: ^\s*TMOUT=
          register: _etc_profile_d_has_parameter
          when: _etc_profile_d_exists.stat.isdir is defined and _etc_profile_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/profile.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: ^\s*TMOUT=
            state: absent
          with_items: '{{ _etc_profile_d_has_parameter.files }}'
          when: _etc_profile_d_has_parameter.matched

        - name: Insert correct line to /etc/profile
          lineinfile:
            path: /etc/profile
            create: true
            line: TMOUT={{ var_accounts_tmout }}
            state: present
            validate: bash -n %s
      tags:
        - NIST-800-171-3.1.11
        - NIST-800-53-AC-12
        - NIST-800-53-AC-2(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-10
        - accounts_tmout
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Print error message if user is not root
      fail:
        msg: Root account required to read root $PATH
      when: ansible_user != "root"
      ignore_errors: true
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(a)
        - accounts_root_path_dirs_no_write
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get root paths which are not symbolic links
      stat:
        path: '{{ item }}'
      changed_when: false
      failed_when: false
      register: root_paths
      with_items: '{{ ansible_env.PATH.split('':'') }}'
      when: ansible_user == "root"
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(a)
        - accounts_root_path_dirs_no_write
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Disable writability to root directories
      file:
        path: '{{ item.item }}'
        mode: g-w,o-w
      with_items: '{{ root_paths.results }}'
      when:
        - root_paths.results is defined
        - item.stat.exists
        - not item.stat.islnk
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(a)
        - accounts_root_path_dirs_no_write
        - low_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Enable service auditd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service auditd
          service:
            name: auditd
            enabled: 'yes'
            state: started
          when:
            - '"audit" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000145
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - NIST-800-53-AC-2(g)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-3
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.1
        - enable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_auditd_enabled

    - name: Enable Auditing for Processes Which Start Prior to the Audit Daemon
      command: /sbin/grubby --update-kernel=ALL --args="audit=1"
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000525
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-14(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IR-5(1)
        - PCI-DSS-Req-10.3
        - grub_legacy_audit_argument
        - low_complexity
        - low_disruption
        - low_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for audit rule entries for sysadmin actions
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*/etc/sudoers.*$
        patterns: '*.rules'
      register: find_audit_sysadmin_actions
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000201
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/actions.rules as the recipient for the rule
      set_fact:
        all_sysadmin_actions_files:
          - /etc/audit/rules.d/actions.rules
      when:
        - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000201
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_sysadmin_actions_files:
          - '{{ find_audit_sysadmin_actions.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched
          > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000201
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers rule in rules.d
      lineinfile:
        path: '{{ all_sysadmin_actions_files[0] }}'
        line: -w /etc/sudoers -p wa -k actions
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000201
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers.d rule in rules.d
      lineinfile:
        path: '{{ all_sysadmin_actions_files[0] }}'
        line: -w /etc/sudoers.d/ -p wa -k actions
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000201
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -w /etc/sudoers -p wa -k actions
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000201
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers.d in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -w /etc/sudoers.d/ -p wa -k actions
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000201
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/selinux/ already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/selinux/\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000183
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_mac_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key MAC-policy
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)MAC-policy$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000183
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_mac_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use /etc/audit/rules.d/MAC-policy.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/MAC-policy.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000183
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_mac_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000183
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_mac_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Add watch rule for /etc/selinux/ in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/selinux/ -p wa -k MAC-policy
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000183
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_mac_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Check if watch rule for /etc/selinux/ already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/selinux/\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000183
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_mac_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Add watch rule for /etc/selinux/ in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/selinux/ -p wa -k MAC-policy
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000183
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_mac_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Remediate audit rules for network configuration for x86
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_rules_networkconfig_modification
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as
            the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Remediate audit rules for network configuration for x86_64
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_rules_networkconfig_modification
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as
            the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/issue already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/issue\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/issue in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/issue -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/issue already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/issue\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/issue in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/issue -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/issue.net already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/issue.net\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/issue.net in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/issue.net already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/issue.net\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/issue.net in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/hosts already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/hosts\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/hosts in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/hosts -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/hosts already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/hosts\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/hosts in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/hosts -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/sysconfig/network already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/sysconfig/network\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/sysconfig/network in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/sysconfig/network already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/sysconfig/network\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/sysconfig/network in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000182
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_networkconfig_modification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set architecture for audit mount tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000199
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_media_export
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_mount
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000199
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_media_export
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_mount.matched is defined and find_mount.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000199
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_media_export
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_mount.files | map(attribute=''path'') | list | first }}'
      when:
        - find_mount.matched is defined and find_mount.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000199
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_media_export
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the mount rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000199
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_media_export
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the mount rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000199
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_media_export
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the mount rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000199
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_media_export
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the mount rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000199
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_media_export
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000202
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_kernel_module_loading
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Perform remediation of Audit rules for kernel module loading for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - init_module
              - delete_module

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key modules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)modules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/modules.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/modules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k modules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - init_module
              - delete_module

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k modules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000202
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_kernel_module_loading
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Perform remediation of Audit rules for kernel module loading for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - init_module
              - delete_module

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key modules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)modules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/modules.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/modules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k modules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - init_module
              - delete_module

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k modules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000202
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.7
        - audit_rules_kernel_module_loading
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit lsetxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000194
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lsetxattr
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000194
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000194
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000194
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000194
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000194
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000194
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000194
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit chown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000185
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chown
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000185
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chown.matched is defined and find_chown.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000185
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chown.matched is defined and find_chown.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000185
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S chown -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000185
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S chown -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000185
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S chown -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000185
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S chown -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000185
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit chmod tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000184
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chmod
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000184
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chmod.matched is defined and find_chmod.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000184
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chmod.matched is defined and find_chmod.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000184
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chmod rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S chmod -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000184
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S chmod -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000184
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S chmod -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000184
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S chmod -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000184
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_chmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit fchmodat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000187
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmodat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchmodat
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000187
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmodat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchmodat.matched is defined and find_fchmodat.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000187
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmodat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchmodat.matched is defined and find_fchmodat.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000187
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmodat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fchmodat -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000187
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmodat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fchmodat -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000187
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmodat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fchmodat -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000187
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmodat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fchmodat -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000187
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmodat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit lchown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000192
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lchown
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000192
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_lchown.matched is defined and find_lchown.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000192
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lchown.matched is defined and find_lchown.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000192
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lchown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S lchown -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000192
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lchown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S lchown -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000192
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S lchown -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000192
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lchown rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S lchown -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000192
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit fremovexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000190
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fremovexattr
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000190
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000190
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000190
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000190
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000190
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000190
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000190
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit fchown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000188
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchown
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000188
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchown.matched is defined and find_fchown.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000188
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchown.matched is defined and find_fchown.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000188
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fchown -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000188
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fchown -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000188
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fchown -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000188
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchown rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fchown -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000188
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit fsetxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000191
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fsetxattr
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000191
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000191
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000191
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000191
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000191
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000191
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000191
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fsetxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit fchownat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000189
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchownat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchownat
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000189
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchownat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchownat.matched is defined and find_fchownat.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000189
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchownat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchownat.matched is defined and find_fchownat.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000189
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchownat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchownat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fchownat -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000189
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchownat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchownat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fchownat -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000189
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchownat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fchownat -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000189
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchownat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fchownat -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000189
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchownat
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit fchmod tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000186
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchmod
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000186
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchmod.matched is defined and find_fchmod.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000186
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchmod.matched is defined and find_fchmod.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000186
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchmod rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fchmod -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000186
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchmod rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fchmod -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000186
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fchmod -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000186
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fchmod -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000186
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_fchmod
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit removexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000195
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_removexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_removexattr
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000195
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_removexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_removexattr.matched is defined and find_removexattr.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000195
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_removexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_removexattr.matched is defined and find_removexattr.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000195
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_removexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the removexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S removexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000195
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_removexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the removexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S removexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000195
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_removexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S removexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000195
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_removexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S removexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000195
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_removexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit lremovexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000193
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lremovexattr
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000193
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000193
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000193
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000193
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000193
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000193
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=500 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000193
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_lremovexattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit setxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000196
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_setxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_setxattr
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000196
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_setxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_setxattr.matched is defined and find_setxattr.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000196
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_setxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_setxattr.matched is defined and find_setxattr.matched > 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000196
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_setxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the setxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S setxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000196
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_setxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the setxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S setxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000196
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_setxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S setxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000196
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_setxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S setxattr -F auid>=500 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000196
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.5.5
        - audit_rules_dac_modification_setxattr
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000167
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_settimeofday
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for settimeofday for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000167
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_settimeofday
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for settimeofday for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000167
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_settimeofday
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for stime syscall for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - stime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - stime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000169
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_stime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000165
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_adjtimex
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for adjtimex for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000165
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_adjtimex
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for adjtimex for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000165
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_adjtimex
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000171
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_clock_settime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for clock_settime for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key time-change
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)time-change$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/time-change.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/time-change.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000171
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_clock_settime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Perform remediation of Audit rules for clock_settime for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key time-change
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)time-change$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/time-change.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/time-change.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000171
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_clock_settime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/localtime already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/localtime\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000173
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - NIST-800-53-AU-12(c)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for other rules with specified key audit_time_rules
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000173
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - NIST-800-53-AU-12(c)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_time_rules.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000173
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - NIST-800-53-AU-12(c)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000173
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - NIST-800-53-AU-12(c)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/localtime in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/localtime -p wa -k audit_time_rules
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000173
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - NIST-800-53-AU-12(c)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Check if watch rule for /etc/localtime already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/localtime\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000173
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - NIST-800-53-AU-12(c)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Add watch rule for /etc/localtime in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/localtime -p wa -k audit_time_rules
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000173
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - NIST-800-53-AU-12(c)
        - PCI-DSS-Req-10.4.2.b
        - audit_rules_time_watch_localtime
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search for privileged commands
      shell: find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null
      args:
        warn: false
        executable: /bin/bash
      check_mode: false
      register: find_result
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000198
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - audit_rules_privileged_commands
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path={{ item }} .*$
        patterns: '*.rules'
      with_items:
        - '{{ find_result.stdout_lines }}'
      register: files_result
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000198
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - audit_rules_privileged_commands
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Overwrites the rule in rules.d
      lineinfile:
        path: '{{ item.1.path }}'
        line: -a always,exit -F path={{ item.0.item }} -F perm=x -F auid>=500 -F auid!=unset
          -F key=special-config-changes
        create: false
        regexp: ^.*path={{ item.0.item }} .*$
      with_subelements:
        - '{{ files_result.results }}'
        - files
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000198
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - audit_rules_privileged_commands
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Adds the rule in rules.d
      lineinfile:
        path: /etc/audit/rules.d/privileged.rules
        line: -a always,exit -F path={{ item.item }} -F perm=x -F auid>=500 -F auid!=unset
          -F key=special-config-changes
        create: true
      with_items:
        - '{{ files_result.results }}'
      when:
        - files_result.results is defined and item.matched == 0
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000198
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - audit_rules_privileged_commands
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces the rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path={{ item.item }} -F perm=x -F auid>=500 -F auid!=unset
          -F key=special-config-changes
        create: true
        regexp: ^.*path={{ item.item }} .*$
      with_items:
        - '{{ files_result.results }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000198
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-3(10)
        - PCI-DSS-Req-10.2.2
        - audit_rules_privileged_commands
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Configure auditd Max Log File Size
      lineinfile:
        dest: /etc/audit/auditd.conf
        regexp: ^\s*max_log_file\s*=\s*.*$
        line: max_log_file = {{ var_auditd_max_log_file }}
        state: present
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000160
        - NIST-800-53-AU-11
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - auditd_data_retention_max_log_file
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Configure auditd Number of Logs Retained
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: num_logs = {{ var_auditd_num_logs }}
        regexp: ^\s*num_logs\s*=\s*.*$
        state: present
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000159
        - NIST-800-171-3.3.1
        - NIST-800-53-AU-11
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - auditd_data_retention_num_logs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Configure auditd max_log_file_action Upon Reaching Maximum Log Size
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: max_log_file_action = {{ var_auditd_max_log_file_action }}
        regexp: ^\s*max_log_file_action\s*=\s*.*$
        state: present
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000161
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(2)
        - NIST-800-53-AU-5(4)
        - NIST-800-53-AU-5(b)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - auditd_data_retention_max_log_file_action
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Configure auditd admin_space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: admin_space_left_action = {{ var_auditd_admin_space_left_action }}
        regexp: ^\s*admin_space_left_action\s*=\s*.*$
        state: present
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-06-000163
        - NIST-800-171-3.3.1
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(2)
        - NIST-800-53-AU-5(4)
        - NIST-800-53-AU-5(b)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - auditd_data_retention_admin_space_left_action
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Grep for yum repo section names
      shell: grep -HEr '^\[.+\]' -r /etc/yum.repos.d/
      register: repo_grep_results
      ignore_errors: true
      changed_when: false
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000015
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - enable_strategy
        - ensure_gpgcheck_never_disabled
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed

    - name: Set gpgcheck=1 for each yum repo
      ini_file:
        path: '{{ item[0] }}'
        section: '{{ item[1] }}'
        option: gpgcheck
        value: '1'
        no_extra_spaces: true
      loop: '{{ repo_grep_results.stdout | regex_findall( ''(.+\.repo):\[(.+)\]\n?'' )
        }}'
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000015
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - enable_strategy
        - ensure_gpgcheck_never_disabled
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed

    - name: Read permission of GPG key directory
      stat:
        path: /etc/pki/rpm-gpg/
      register: gpg_key_directory_permission
      check_mode: false
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000008
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Read signatures in GPG key
      command: gpg --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
      args:
        warn: false
      changed_when: false
      register: gpg_fingerprints
      check_mode: false
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000008
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Set Fact - Installed GPG Fingerprints
      set_fact:
        gpg_installed_fingerprints: |-
          {{ gpg_fingerprints.stdout | regex_findall('^pub.*
          (?:^fpr[:]*)([0-9A-Fa-f]*)', '\1') | list }}
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000008
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Set Fact - Valid fingerprints
      set_fact:
        gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "43A6E49C4A38F4BE9ABF2A5345689C882FA658E0")
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000008
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Import RedHat GPG key
      rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      when:
        - gpg_key_directory_permission.stat.mode <= '0755'
        - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length ==
          0
        - gpg_installed_fingerprints | length > 0
        - ansible_distribution == "RedHat"
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000008
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_redhat_gpgkey_installed
        - high_severity
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy

    - name: Security patches are up to date
      package:
        name: '*'
        state: latest
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000011
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-2(5)
        - NIST-800-53-SI-2(c)
        - PCI-DSS-Req-6.2
        - high_disruption
        - high_severity
        - low_complexity
        - patch_strategy
        - reboot_required
        - security_patches_up_to_date
        - skip_ansible_lint

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when: ansible_distribution == "Fedora"
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000013
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_gpgcheck_globally_activated
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Ensure GPG check is globally activated (yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: gpgcheck
        value: 1
        no_extra_spaces: true
        create: false
      when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution
        == "Scientific" or yum_config_file.stat.exists)
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000013
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_gpgcheck_globally_activated
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Ensure GPG check is globally activated (dnf)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: gpgcheck
        value: 1
        no_extra_spaces: true
        create: false
      when: ansible_distribution == "Fedora"
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000013
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-SI-7
        - PCI-DSS-Req-6.2
        - ensure_gpgcheck_globally_activated
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Read list of files with incorrect permissions
      command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev
        --nocaps --nolinkto --nouser --nogroup
      args:
        warn: false
      register: files_with_incorrect_permissions
      failed_when: files_with_incorrect_permissions.rc > 1
      changed_when: false
      check_mode: false
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000518
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_permissions

    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_permissions.stdout_lines | map(''regex_findall'',
        ''^[.]+[M]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      check_mode: false
      when: (files_with_incorrect_permissions.stdout_lines | length > 0)
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000518
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_permissions

    - name: Correct file permissions with RPM
      command: rpm --setperms '{{ item }}'
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when: (files_with_incorrect_permissions.stdout_lines | length > 0)
      tags:
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-06-000518
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - high_complexity
        - high_severity
        - medium_disruption
        - no_reboot_needed
        - restrict_strategy
        - rpm_verify_permissions

    - name: Ensure aide is installed
      package:
        name: aide
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1.3
        - DISA-STIG-RHEL-06-000016
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-11.5
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_aide_installed

    - name: Test for existence /boot/grub/grub.conf
      stat:
        path: /boot/grub/grub.conf
      register: file_exists
      tags:
        - DISA-STIG-RHEL-06-000065
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-7.1
        - configure_strategy
        - file_owner_grub_conf
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure owner 0 on /boot/grub/grub.conf
      file:
        path: /boot/grub/grub.conf
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - DISA-STIG-RHEL-06-000065
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-7.1
        - configure_strategy
        - file_owner_grub_conf
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /boot/grub/grub.conf
      stat:
        path: /boot/grub/grub.conf
      register: file_exists
      tags:
        - DISA-STIG-RHEL-06-000067
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_grub_conf
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0600 on /boot/grub/grub.conf
      file:
        path: /boot/grub/grub.conf
        mode: '0600'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - DISA-STIG-RHEL-06-000067
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_grub_conf
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /boot/grub/grub.conf
      stat:
        path: /boot/grub/grub.conf
      register: file_exists
      tags:
        - DISA-STIG-RHEL-06-000066
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-7.1
        - configure_strategy
        - file_groupowner_grub_conf
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure group owner 0 on /boot/grub/grub.conf
      file:
        path: /boot/grub/grub.conf
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - DISA-STIG-RHEL-06-000066
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-7.1
        - configure_strategy
        - file_groupowner_grub_conf
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Stop autofs
      command: /sbin/service 'autofs' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000526
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_autofs_disabled

    - name: Switch off autofs
      command: /sbin/chkconfig --level 0123456 'autofs' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000526
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_autofs_disabled

    - name: Read list of system executables without root ownership
      command: find /bin/ /usr/bin/ /usr/local/bin/ /sbin/ /usr/sbin/ /usr/local/sbin/
        /usr/libexec \! -user root
      register: no_root_system_executables
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - DISA-STIG-RHEL-06-000048
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_ownership_binary_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set ownership to root of system executables
      file:
        path: '{{ item }}'
        owner: root
      with_items: '{{ no_root_system_executables.stdout_lines }}'
      when: no_root_system_executables.stdout_lines | length > 0
      tags:
        - DISA-STIG-RHEL-06-000048
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_ownership_binary_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Read list of world and group writable system executables
      command: find /bin /usr/bin /usr/local/bin /sbin /usr/sbin /usr/local/sbin /usr/libexec
        -perm /022 -type f
      register: world_writable_library_files
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - DISA-STIG-RHEL-06-000047
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_permissions_binary_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Remove world/group writability of system executables
      file:
        path: '{{ item }}'
        mode: go-w
      with_items: '{{ world_writable_library_files.stdout_lines }}'
      when: world_writable_library_files.stdout_lines | length > 0
      tags:
        - DISA-STIG-RHEL-06-000047
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_permissions_binary_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Read list of world and group writable files in libraries directories
      command: find /lib /lib64 /usr/lib /usr/lib64 -perm /022 -type f
      register: world_writable_library_files
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - DISA-STIG-RHEL-06-000045
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_permissions_library_dirs
        - high_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Disable world/group writability to library files
      file:
        path: '{{ item }}'
        mode: go-w
      with_items: '{{ world_writable_library_files.stdout_lines }}'
      when: world_writable_library_files.stdout_lines | length > 0
      tags:
        - DISA-STIG-RHEL-06-000045
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_permissions_library_dirs
        - high_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Read list libraries without root ownership
      command: find -L /usr/lib /usr/lib64 /lib /lib64 \! -user root
      register: libraries_not_owned_by_root
      changed_when: false
      failed_when: false
      check_mode: false
      tags:
        - DISA-STIG-RHEL-06-000046
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_ownership_library_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set ownership of system libraries to root
      file:
        path: '{{ item }}'
        owner: root
      with_items: '{{ libraries_not_owned_by_root.stdout_lines }}'
      when: libraries_not_owned_by_root | length > 0
      tags:
        - DISA-STIG-RHEL-06-000046
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - file_ownership_library_dirs
        - medium_complexity
        - medium_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Test for existence /etc/gshadow
      stat:
        path: /etc/gshadow
      register: file_exists
      tags:
        - DISA-STIG-RHEL-06-000037
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_groupowner_etc_gshadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure group owner 0 on /etc/gshadow
      file:
        path: /etc/gshadow
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - DISA-STIG-RHEL-06-000037
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_groupowner_etc_gshadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/shadow
      stat:
        path: /etc/shadow
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000033
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_owner_etc_shadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure owner 0 on /etc/shadow
      file:
        path: /etc/shadow
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000033
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_owner_etc_shadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/shadow
      stat:
        path: /etc/shadow
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000035
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_permissions_etc_shadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0000 on /etc/shadow
      file:
        path: /etc/shadow
        mode: '0000'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000035
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_permissions_etc_shadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/passwd
      stat:
        path: /etc/passwd
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000039
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_owner_etc_passwd
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure owner 0 on /etc/passwd
      file:
        path: /etc/passwd
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000039
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_owner_etc_passwd
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/group
      stat:
        path: /etc/group
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000044
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_permissions_etc_group
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0644 on /etc/group
      file:
        path: /etc/group
        mode: '0644'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000044
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_permissions_etc_group
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/passwd
      stat:
        path: /etc/passwd
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000041
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_permissions_etc_passwd
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0644 on /etc/passwd
      file:
        path: /etc/passwd
        mode: '0644'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000041
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_permissions_etc_passwd
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/group
      stat:
        path: /etc/group
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000042
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_owner_etc_group
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure owner 0 on /etc/group
      file:
        path: /etc/group
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000042
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_owner_etc_group
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/group
      stat:
        path: /etc/group
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000043
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_groupowner_etc_group
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure group owner 0 on /etc/group
      file:
        path: /etc/group
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000043
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_groupowner_etc_group
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/gshadow
      stat:
        path: /etc/gshadow
      register: file_exists
      tags:
        - DISA-STIG-RHEL-06-000038
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_etc_gshadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission 0000 on /etc/gshadow
      file:
        path: /etc/gshadow
        mode: '0000'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - DISA-STIG-RHEL-06-000038
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_etc_gshadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/passwd
      stat:
        path: /etc/passwd
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000040
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_groupowner_etc_passwd
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure group owner 0 on /etc/passwd
      file:
        path: /etc/passwd
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000040
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_groupowner_etc_passwd
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/gshadow
      stat:
        path: /etc/gshadow
      register: file_exists
      tags:
        - DISA-STIG-RHEL-06-000036
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_owner_etc_gshadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure owner 0 on /etc/gshadow
      file:
        path: /etc/gshadow
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - DISA-STIG-RHEL-06-000036
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_owner_etc_gshadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/shadow
      stat:
        path: /etc/shadow
      register: file_exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000034
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_groupowner_etc_shadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure group owner 0 on /etc/shadow
      file:
        path: /etc/shadow
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-06-000034
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-8.7.c
        - configure_strategy
        - file_groupowner_etc_shadow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure permission noexec are set on var_removable_partition
      lineinfile:
        path: /etc/fstab
        regexp: ^\s*({{ var_removable_partition }})\s+([^\s]*)\s+([^\s]*)\s+([^\s]*)(.*)$
        backrefs: true
        line: \1 \2 \3 \4,noexec \5
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000271
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - mount_option_noexec_removable_partitions
        - no_reboot_needed
        - unknown_severity

    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000078
        - NIST-800-171-3.1.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-30
        - NIST-800-53-SC-30(2)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_kernel_randomize_va_space

    - name: Ensure libreswan is installed
      package:
        name: libreswan
        state: present
      tags:
        - DISA-STIG-RHEL-06-000321
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-4.1
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_libreswan_installed

    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-06-000091
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_redirects

    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000088
        - NIST-800-171-3.1.20
        - NIST-800-53-AC-3(10)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_conf_all_log_martians
        - unknown_severity

    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000093
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
        - unknown_severity

    - name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
      sysctl:
        name: net.ipv4.conf.default.rp_filter
        value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000097
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_rp_filter

    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-06-000092
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts

    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000086
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_secure_redirects

    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-06-000095
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(1)
        - NIST-800-53-SC-5(2)
        - NIST-800-53-SC-5(3)(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_tcp_syncookies

    - name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000083
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_source_route

    - name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
      sysctl:
        name: net.ipv4.conf.all.rp_filter
        value: '{{ sysctl_net_ipv4_conf_all_rp_filter_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000096
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_rp_filter

    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-06-000084
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_redirects

    - name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000090
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_secure_redirects

    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-06-000089
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_source_route

    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-06-000081
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_send_redirects

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-06-000080
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_send_redirects

    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000082
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_ip_forward

    - name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000099
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_default_accept_redirects

    - name: Ensure kernel module 'dccp' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/dccp.conf
        regexp: dccp
        line: install dccp /bin/true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1
        - DISA-STIG-RHEL-06-000124
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - kernel_module_dccp_disabled
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required

    - name: Ensure kernel module 'rds' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/rds.conf
        regexp: rds
        line: install rds /bin/true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000126
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - kernel_module_rds_disabled
        - low_complexity
        - low_severity
        - medium_disruption
        - reboot_required

    - name: Ensure kernel module 'tipc' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/tipc.conf
        regexp: tipc
        line: install tipc /bin/true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000127
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - kernel_module_tipc_disabled
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required

    - name: Ensure kernel module 'sctp' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/sctp.conf
        regexp: sctp
        line: install sctp /bin/true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.10.1
        - DISA-STIG-RHEL-06-000125
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - kernel_module_sctp_disabled
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required

    - name: Enable service ip6tables
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service ip6tables
          service:
            name: ip6tables
            enabled: 'yes'
            state: started
          when:
            - '"iptables-ipv6" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000103
        - NIST-800-53-AC-4
        - NIST-800-53-CA-3(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(21)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_ip6tables_enabled

    - name: Enable service iptables
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service iptables
          service:
            name: iptables
            enabled: 'yes'
            state: started
          when:
            - '"iptables" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000117
        - NIST-800-53-AC-4
        - NIST-800-53-CA-3(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(21)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_iptables_enabled

    - name: Ensure rsyslog is installed
      package:
        name: rsyslog
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_rsyslog_installed

    - name: Enable service rsyslog
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service rsyslog
          service:
            name: rsyslog
            enabled: 'yes'
            state: started
          when:
            - '"rsyslog" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-AU-4(1)
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_rsyslog_enabled

    - name: Configure daily log rotation in /etc/logrotate.conf
      lineinfile:
        create: true
        dest: /etc/logrotate.conf
        regexp: ^daily$
        line: daily
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000138
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - configure_strategy
        - ensure_logrotate_activated
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Make sure daily log rotation setting is not overriden in /etc/logrotate.conf
      lineinfile:
        create: false
        dest: /etc/logrotate.conf
        regexp: ^(weekly|monthly|yearly)$
        state: absent
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000138
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - configure_strategy
        - ensure_logrotate_activated
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Configure cron.daily if not already
      block:

        - name: Add shebang
          lineinfile:
            path: /etc/cron.daily/logrotate
            line: '#!/bin/sh'
            insertbefore: BOF
            create: true

        - name: Add logrotate call
          lineinfile:
            path: /etc/cron.daily/logrotate
            line: /usr/sbin/logrotate /etc/logrotate.conf
            regexp: ^[\s]*/usr/sbin/logrotate[\s\S]*/etc/logrotate.conf$
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000138
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - configure_strategy
        - ensure_logrotate_activated
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Set rsyslog remote loghost
      lineinfile:
        dest: /etc/rsyslog.conf
        regexp: ^\*\.\*
        line: '*.* @@{{ rsyslog_remote_loghost_address }}'
        create: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000136
        - NIST-800-53-AU-4(1)
        - NIST-800-53-AU-9(2)
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - rsyslog_remote_loghost

    - name: Ensure SELinux State is Enforcing
      block:

        - name: Deduplicate values from /etc/selinux/config
          lineinfile:
            path: /etc/selinux/config
            create: false
            regexp: ^SELINUX=
            state: absent

        - name: Insert correct line to /etc/selinux/config
          lineinfile:
            path: /etc/selinux/config
            create: true
            line: SELINUX={{ var_selinux_state }}
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000020
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)(a)
        - NIST-800-53-AU-9
        - NIST-800-53-SC-7(21)
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - restrict_strategy
        - selinux_state

    - name: Configure SELinux Policy
      block:

        - name: Deduplicate values from /etc/selinux/config
          lineinfile:
            path: /etc/selinux/config
            create: false
            regexp: ^SELINUXTYPE=
            state: absent

        - name: Insert correct line to /etc/selinux/config
          lineinfile:
            path: /etc/selinux/config
            create: true
            line: SELINUXTYPE={{ var_selinux_policy_name }}
            state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000023
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)(a)
        - NIST-800-53-AU-9
        - NIST-800-53-SC-7(21)
        - high_severity
        - low_complexity
        - low_disruption
        - reboot_required
        - restrict_strategy
        - selinux_policytype

    - name: Stop netfs
      command: /sbin/service 'netfs' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_netfs_disabled
        - unknown_severity

    - name: Switch off netfs
      command: /sbin/chkconfig --level 0123456 'netfs' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_netfs_disabled
        - unknown_severity

    - name: Stop nfslock
      command: /sbin/service 'nfslock' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_nfslock_disabled
        - unknown_severity

    - name: Switch off nfslock
      command: /sbin/chkconfig --level 0123456 'nfslock' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_nfslock_disabled
        - unknown_severity

    - name: Stop rpcgssd
      command: /sbin/service 'rpcgssd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rpcgssd_disabled
        - unknown_severity

    - name: Switch off rpcgssd
      command: /sbin/chkconfig --level 0123456 'rpcgssd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rpcgssd_disabled
        - unknown_severity

    - name: Stop rpcidmapd
      command: /sbin/service 'rpcidmapd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rpcidmapd_disabled
        - unknown_severity

    - name: Switch off rpcidmapd
      command: /sbin/chkconfig --level 0123456 'rpcidmapd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rpcidmapd_disabled
        - unknown_severity

    - name: Get nfs and nfs4 mount points, that don't have nosuid
      command: findmnt --fstab --types nfs,nfs4 -O nonosuid -n
      register: points_register
      check_mode: false
      changed_when: false
      failed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000270
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM6(a)
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_nosuid_remote_filesystems
        - no_reboot_needed

    - name: Add nosuid to nfs and nfs4 mount points
      mount:
        path: '{{ item.split()[0] }}'
        src: '{{ item.split()[1] }}'
        fstype: '{{ item.split()[2] }}'
        state: mounted
        opts: '{{ item.split()[3] }},nosuid'
      when:
        - (points_register.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      with_items: '{{ points_register.stdout_lines }}'
      tags:
        - DISA-STIG-RHEL-06-000270
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM6(a)
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_nosuid_remote_filesystems
        - no_reboot_needed

    - name: Get nfs and nfs4 mount points, that don't have nodev
      command: findmnt --fstab --types nfs,nfs4 -O nonodev -n
      register: points_register
      check_mode: false
      changed_when: false
      failed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000269
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MP-2
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_nodev_remote_filesystems
        - no_reboot_needed

    - name: Add nodev to nfs and nfs4 mount points
      mount:
        path: '{{ item.split()[0] }}'
        src: '{{ item.split()[1] }}'
        fstype: '{{ item.split()[2] }}'
        state: mounted
        opts: '{{ item.split()[3] }},nodev'
      when:
        - (points_register.stdout | length > 0)
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      with_items: '{{ points_register.stdout_lines }}'
      tags:
        - DISA-STIG-RHEL-06-000269
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MP-2
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_nodev_remote_filesystems
        - no_reboot_needed

    - name: Stop nfs
      command: /sbin/service 'nfs' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_nfs_disabled
        - unknown_severity

    - name: Switch off nfs
      command: /sbin/chkconfig --level 0123456 'nfs' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_nfs_disabled
        - unknown_severity

    - name: Stop rpcsvcgssd
      command: /sbin/service 'rpcsvcgssd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rpcsvcgssd_disabled
        - unknown_severity

    - name: Switch off rpcsvcgssd
      command: /sbin/chkconfig --level 0123456 'rpcsvcgssd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rpcsvcgssd_disabled
        - unknown_severity

    - name: Stop smb
      command: /sbin/service 'smb' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_smb_disabled

    - name: Switch off smb
      command: /sbin/chkconfig --level 0123456 'smb' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_smb_disabled

    - name: Check if /etc/samba/smb.conf exists
      stat:
        path: /etc/samba/smb.conf
      register: st_smb
      tags:
        - DISA-STIG-RHEL-06-000272
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - require_smb_client_signing
        - unknown_severity

    - name: Require Client SMB Packet Signing, if using smbclient
      lineinfile:
        dest: /etc/samba/smb.conf
        line: client signing = mandatory
        state: present
        insertafter:
          - global
      when: st_smb.stat.exists
      tags:
        - DISA-STIG-RHEL-06-000272
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - require_smb_client_signing
        - unknown_severity

    - name: Enable service crond
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service crond
          service:
            name: crond
            enabled: 'yes'
            state: started
          when:
            - '"cronie" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000224
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_crond_enabled

    - name: Stop atd
      command: /sbin/service 'atd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000262
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_atd_disabled

    - name: Switch off atd
      command: /sbin/chkconfig --level 0123456 'atd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000262
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_atd_disabled

    - name: Ensure httpd is removed
      package:
        name: httpd
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_httpd_removed
        - unknown_severity

    - name: Stop httpd
      command: /sbin/service 'httpd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_httpd_disabled
        - unknown_severity

    - name: Switch off httpd
      command: /sbin/chkconfig --level 0123456 'httpd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_httpd_disabled
        - unknown_severity

    - name: Ensure dovecot is removed
      package:
        name: dovecot
        state: absent
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_dovecot_removed
        - unknown_severity

    - name: Stop dovecot
      command: /sbin/service 'dovecot' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_dovecot_disabled
        - unknown_severity

    - name: Switch off dovecot
      command: /sbin/chkconfig --level 0123456 'dovecot' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_dovecot_disabled
        - unknown_severity

    - name: Gather list of packages
      package_facts:
        manager: auto
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000249
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - postfix_network_listening_disabled
        - restrict_strategy

    - name: Make changes to Postfix configuration file
      lineinfile:
        path: /etc/postfix/main.cf
        create: false
        regexp: ^inet_interfaces\s*=\s.*
        line: inet_interfaces = {{ var_postfix_inet_interfaces }}
        state: present
        insertafter: ^inet_interfaces\s*=\s.*
      when:
        - '"postfix" in ansible_facts.packages'
        - ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000249
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - postfix_network_listening_disabled
        - restrict_strategy

    - name: Set SSH Idle Timeout Interval
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveInterval\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: ClientAliveInterval {{ sshd_idle_timeout_value }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.5.6
        - DISA-STIG-RHEL-06-000230
        - NIST-800-171-3.1.11
        - NIST-800-53-AC-12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-2(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-10
        - PCI-DSS-Req-8.1.8
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_set_idle_timeout

    - name: Disable SSH Root Login
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.5.6
        - DISA-STIG-RHEL-06-000237
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(5)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_root_login

    - name: Do Not Allow SSH Environment Options
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitUserEnvironment no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.5.6
        - DISA-STIG-RHEL-06-000241
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_do_not_permit_user_env

    - name: Disable Host-Based Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*HostbasedAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: HostbasedAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.5.6
        - DISA-STIG-RHEL-06-000236
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_host_auth
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Allow Only SSH Protocol 2
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Protocol\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Protocol 2
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.5.6
        - DISA-STIG-RHEL-06-000227
        - NIST-800-171-3.1.13
        - NIST-800-171-3.5.4
        - NIST-800-53-AC-17(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-13
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - restrict_strategy
        - sshd_allow_only_protocol2

    - name: Set SSH Client Alive Max Count
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveCountMax\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.5.6
        - DISA-STIG-RHEL-06-000231
        - NIST-800-171-3.1.11
        - NIST-800-53-AC-12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-2(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-10
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_set_keepalive

    - name: Disable SSH Access via Empty Passwords
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitEmptyPasswords no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.5.6
        - DISA-STIG-RHEL-06-000239
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_empty_passwords

    - name: Enable SSH Warning Banner
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Banner\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Banner /etc/issue
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - CJIS-5.5.6
        - DISA-STIG-RHEL-06-000240
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_enable_warning_banner

    - name: Stop abrtd
      command: /sbin/service 'abrtd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000261
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_abrtd_disabled

    - name: Switch off abrtd
      command: /sbin/chkconfig --level 0123456 'abrtd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000261
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_abrtd_disabled

    - name: Stop ntpdate
      command: /sbin/service 'ntpdate' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000265
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_ntpdate_disabled

    - name: Switch off ntpdate
      command: /sbin/chkconfig --level 0123456 'ntpdate' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000265
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_ntpdate_disabled

    - name: Stop oddjobd
      command: /sbin/service 'oddjobd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000266
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_oddjobd_disabled

    - name: Switch off oddjobd
      command: /sbin/chkconfig --level 0123456 'oddjobd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000266
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_oddjobd_disabled

    - name: Stop qpidd
      command: /sbin/service 'qpidd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000267
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_qpidd_disabled

    - name: Switch off qpidd
      command: /sbin/chkconfig --level 0123456 'qpidd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000267
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_qpidd_disabled

    - name: Stop rdisc
      command: /sbin/service 'rdisc' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000268
        - NIST-800-53-AC-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_rdisc_disabled

    - name: Switch off rdisc
      command: /sbin/chkconfig --level 0123456 'rdisc' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000268
        - NIST-800-53-AC-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_rdisc_disabled

    - name: Stop rhnsd
      command: /sbin/service 'rhnsd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000009
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_rhnsd_disabled

    - name: Switch off rhnsd
      command: /sbin/chkconfig --level 0123456 'rhnsd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000009
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_rhnsd_disabled

    - name: Enable service ntpd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service ntpd
          service:
            name: ntpd
            enabled: 'yes'
            state: started
          when:
            - '"ntp" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000247
        - NIST-800-53-AU-8(1)(a)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.4
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_ntpd_enabled

    - name: Ensure xinetd is removed
      package:
        name: xinetd
        state: absent
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000204
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - package_xinetd_removed

    - name: Stop xinetd
      command: /sbin/service 'xinetd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000203
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_xinetd_disabled

    - name: Switch off xinetd
      command: /sbin/chkconfig --level 0123456 'xinetd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000203
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_xinetd_disabled

    - name: Ensure rsh-server is removed
      package:
        name: rsh-server
        state: absent
      tags:
        - DISA-STIG-RHEL-06-000213
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_rsh-server_removed

    - name: Stop rexec
      command: /sbin/service 'rexec' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000216
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rexec_disabled

    - name: Switch off rexec
      command: /sbin/chkconfig --level 0123456 'rexec' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000216
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rexec_disabled

    - name: Stop rlogin
      command: /sbin/service 'rlogin' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000218
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rlogin_disabled

    - name: Switch off rlogin
      command: /sbin/chkconfig --level 0123456 'rlogin' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000218
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rlogin_disabled

    - name: Stop rsh
      command: /sbin/service 'rsh' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000214
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rsh_disabled

    - name: Switch off rsh
      command: /sbin/chkconfig --level 0123456 'rsh' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000214
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_rsh_disabled

    - block:

        - name: Detect shosts.equiv Files on the System
          find:
            paths: /
            recurse: true
            patterns: shosts.equiv
          check_mode: false
          register: shosts_equiv_locations

        - name: Remove Rsh Trust Files
          file:
            path: '{{ item.path }}'
            state: absent
          with_items: '{{ shosts_equiv_locations.files }}'
          when: shosts_equiv_locations
      tags:
        - DISA-STIG-RHEL-06-000019
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - no_rsh_trust_files
        - restrict_strategy

    - name: Ensure tftp-server is removed
      package:
        name: tftp-server
        state: absent
      tags:
        - DISA-STIG-RHEL-06-000222
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_tftp-server_removed

    - name: Stop tftp
      command: /sbin/service 'tftp' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000223
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_tftp_disabled

    - name: Switch off tftp
      command: /sbin/chkconfig --level 0123456 'tftp' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000223
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_tftp_disabled

    - name: Ensure ypserv is removed
      package:
        name: ypserv
        state: absent
      tags:
        - DISA-STIG-RHEL-06-000220
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_ypserv_removed

    - name: Stop ypbind
      command: /sbin/service 'ypbind' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000221
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_ypbind_disabled

    - name: Switch off ypbind
      command: /sbin/chkconfig --level 0123456 'ypbind' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000221
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_ypbind_disabled

    - name: Ensure telnet-server is removed
      package:
        name: telnet-server
        state: absent
      tags:
        - DISA-STIG-RHEL-06-000206
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_telnet-server_removed

    - name: Stop telnet
      command: /sbin/service 'telnet' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000211
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_telnet_disabled

    - name: Switch off telnet
      command: /sbin/chkconfig --level 0123456 'telnet' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000211
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_telnet_disabled

    - name: Ensure dhcp is removed
      package:
        name: dhcp
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_dhcp_removed

    - name: Stop dhcpd
      command: /sbin/service 'dhcpd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_dhcpd_disabled

    - name: Switch off dhcpd
      command: /sbin/chkconfig --level 0123456 'dhcpd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_dhcpd_disabled

    - name: Ensure squid is removed
      package:
        name: squid
        state: absent
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_squid_removed
        - unknown_severity

    - name: Stop squid
      command: /sbin/service 'squid' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_squid_disabled
        - unknown_severity

    - name: Switch off squid
      command: /sbin/chkconfig --level 0123456 'squid' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - service_squid_disabled
        - unknown_severity

    - name: Ensure net-snmp is removed
      package:
        name: net-snmp
        state: absent
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_net-snmp_removed
        - unknown_severity

    - name: Stop snmpd
      command: /sbin/service 'snmpd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_snmpd_disabled

    - name: Switch off snmpd
      command: /sbin/chkconfig --level 0123456 'snmpd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - service_snmpd_disabled

    - name: Ensure bind is removed
      package:
        name: bind
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - package_bind_removed

    - name: Stop named
      command: /sbin/service 'named' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_named_disabled

    - name: Switch off named
      command: /sbin/chkconfig --level 0123456 'named' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_named_disabled

    - name: Ensure openldap-servers is removed
      package:
        name: openldap-servers
        state: absent
      tags:
        - DISA-STIG-RHEL-06-000256
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed
        - package_openldap-servers_removed

    - name: Stop avahi-daemon
      command: /sbin/service 'avahi-daemon' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000246
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_avahi-daemon_disabled

    - name: Switch off avahi-daemon
      command: /sbin/chkconfig --level 0123456 'avahi-daemon' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - DISA-STIG-RHEL-06-000246
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_avahi-daemon_disabled

    - name: Ensure vsftpd is removed
      package:
        name: vsftpd
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_vsftpd_removed

    - name: Stop vsftpd
      command: /sbin/service 'vsftpd' stop
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_vsftpd_disabled

    - name: Switch off vsftpd
      command: /sbin/chkconfig --level 0123456 'vsftpd' off
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_vsftpd_disabled

